version: '3'

name: phaidra-cloudready

networks:
  phaidra-network:
    ipam:
      config:
        - subnet: 172.29.0.0/16
          ip_range: 172.29.7.0/24
          gateway: 172.29.5.1

services:
  httpd:
    image: testuser34/httpd-dist:latest
    pull_policy: always
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    ports:
      - "${PHAIDRA_HOSTPORT}:80"
    volumes:
      - chronos-sitemaps:/mnt/sitemaps:ro
    depends_on:
      - api
      - ui
      - dbgate
      - solr
      - grafana
    networks:
      - phaidra-network
    environment:
      - PHAIDRA_HOSTNAME=${PHAIDRA_HOSTNAME}
      - PHAIDRA_HOSTPORT=${PHAIDRA_HOSTPORT}
      - LOCAL_ADMIN_IP=${LOCAL_ADMIN_IP}

  imageserver:
    image: testuser34/imageserver-base:979c59b3
    pull_policy: always
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    volumes:
      - pixelgecko:/mnt/converted_images:ro
    networks:
      - phaidra-network

  solr:
    image: testuser34/solr-dist:latest
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    volumes:
      - solr:/var/solr
    environment:
      - SOLR_SALT=${SOLR_SALT}
      - SOLR_USER=${SOLR_USER}
      - SOLR_PASS=${SOLR_PASS}
    networks:
      - phaidra-network

  ui:
    depends_on:
      - api
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    # uncomment if you are doing local development on:
    # + src/phaidra-ui
    # + src/phaidra-vue-components
    # build:
    #   context: ../.
    #   dockerfile: dockerfiles/ui.dockerfile
    # comment out the image-definition, if you are doing local development.
    # (or point to the one you'd like to use)
    image: testuser34/ui-base:latest
    pull_policy: always
    networks:
      - phaidra-network
    environment:
      - PHAIDRA_HOSTNAME=${PHAIDRA_HOSTNAME}
      - PHAIDRA_PORTSTUB=${PHAIDRA_PORTSTUB}
      - PHAIDRA_HOSTPORT=${PHAIDRA_HOSTPORT}
      - OUTSIDE_HTTP_SCHEME=${OUTSIDE_HTTP_SCHEME}
      - PHAIDRA_PRIMARY_COLOR=${PHAIDRA_PRIMARY_COLOR}

  api:
    depends_on:
      - mariadb-phaidra
      - mongodb-phaidra
      - fedora
    image: testuser34/api-dist:latest
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    pull_policy: always
    volumes:
      - fedora:/mnt/fedora:ro
    networks:
      - phaidra-network
    environment:
      - PHAIDRA_HOSTNAME=${PHAIDRA_HOSTNAME}
      - PHAIDRA_PORTSTUB=${PHAIDRA_PORTSTUB}
      - PHAIDRA_HOSTPORT=${PHAIDRA_HOSTPORT}
      - OUTSIDE_HTTP_SCHEME=${OUTSIDE_HTTP_SCHEME}
      - PHAIDRA_SECRET=${PHAIDRA_SECRET}
      - PHAIDRA_ENCRYPTION_KEY=${PHAIDRA_ENCRYPTION_KEY}
      - IMAGESERVER_HASH_SECRET=${IMAGESERVER_HASH_SECRET}
      - PHAIDRA_ADMIN_USER=${PHAIDRA_ADMIN_USER}
      - PHAIDRA_ADMIN_PASSWORD=${PHAIDRA_ADMIN_PASSWORD}
      - FEDORA_ADMIN_USER=${FEDORA_ADMIN_USER}
      - FEDORA_ADMIN_PASS=${FEDORA_ADMIN_PASS}
      - SOLR_USER=${SOLR_USER}
      - SOLR_PASS=${SOLR_PASS}
      - LDAP_ADMIN_USERNAME=${LDAP_ADMIN_USERNAME}
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}
      - LDAP_ROOT=${LDAP_ROOT}
      - OC_EXTERNAL=${OC_EXTERNAL}
      - FEDORA_OCFL_ROOT=${FEDORA_OCFL_ROOT}

  pixelgecko:
    depends_on:
      - mongodb-phaidra
      - api
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    restart:
      always
    image: testuser34/pixelgecko-dist:latest
    pull_policy: always
    volumes:
      - fedora:/mnt/fedora:ro
      - pixelgecko:/mnt/converted_images
    networks:
      - phaidra-network
    environment:
      - IMAGE_CONVERSION_INTERVAL=${IMAGE_CONVERSION_INTERVAL}

  mariadb-phaidra:
    image: mariadb:11.0.2-jammy
    restart: always
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${PHAIDRADB}
      MARIADB_USER: ${MARIADB_PHAIDRA_USER}
      MARIADB_PASSWORD: ${MARIADB_PHAIDRA_PASSWORD}
    volumes:
      - .././container_init/mariadb/phaidradb:/docker-entrypoint-initdb.d:ro
      - mariadb_phaidra:/var/lib/mysql
    networks:
      - phaidra-network

  mariadb-fedora:
    image: mariadb:10.5
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${FEDORADB}
      MARIADB_USER: ${MARIADB_PHAIDRA_USER}
      MARIADB_PASSWORD: ${MARIADB_PHAIDRA_PASSWORD}
    volumes:
      - .././container_init/mariadb/fedoradb:/docker-entrypoint-initdb.d:ro
      - mariadb_fedora:/var/lib/mysql
    networks:
      - phaidra-network

  mongodb-phaidra:
    image: mongo:5
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_PHAIDRA_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PHAIDRA_PASSWORD}
    volumes:
      - mongodb_phaidra:/data/db
      - .././container_init/mongodb/init_oai_sets.json:/mnt/init_oai_sets.json:ro
      - .././container_init/mongodb/mongodb-after-entry.sh:/docker-entrypoint-initdb.d/mongodb-after-entry.sh:ro
    networks:
      - phaidra-network

  dbgate:
    image: dbgate/dbgate:5.2.7
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    restart: always
    environment:
      CONNECTIONS: con1,con2,con3
      LABEL_con1: MariaDB-Phaidra
      SERVER_con1: mariadb-phaidra
      USER_con1: ${MARIADB_PHAIDRA_USER}
      PASSWORD_con1: ${MARIADB_PHAIDRA_PASSWORD}
      PORT_con1: 3306
      ENGINE_con1: mariadb@dbgate-plugin-mysql
      LABEL_con2: MariaDB-Fedora
      SERVER_con2: mariadb-fedora
      USER_con2: ${MARIADB_PHAIDRA_USER}
      PASSWORD_con2: ${MARIADB_PHAIDRA_PASSWORD}
      PORT_con2: 3306
      ENGINE_con2: mariadb@dbgate-plugin-mysql
      LABEL_con3: MongoDB-Phaidra
      URL_con3: mongodb://${MONGODB_PHAIDRA_USER}:${MONGODB_PHAIDRA_PASSWORD}@mongodb-phaidra:27017
      ENGINE_con3: mongo@dbgate-plugin-mongo
      WEB_ROOT: /dbgate
      LOGINS: phaidra
      LOGIN_PASSWORD_phaidra: ${DBGATE_PASS}
    volumes:
      - dbgate:/root/.dbgate
    depends_on:
      - mariadb-phaidra
      - mariadb-fedora
      - mongodb-phaidra
    networks:
      - phaidra-network

  fedora:
    image: fcrepo/fcrepo:6.4.1
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    restart: always
    environment:
      - CATALINA_OPTS=${CATALINA_OPTS}
      - FEDORA_ADMIN_USERNAME=${FEDORA_ADMIN_USER}
      - FEDORA_ADMIN_PASSWORD=${FEDORA_ADMIN_PASS}
    volumes:
      - fedora:/usr/local/tomcat/fcrepo-home
    depends_on:
      - mariadb-fedora
    networks:
      - phaidra-network

  lam:
    image: ghcr.io/ldapaccountmanager/lam:8.5
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    restart: always
    environment:
      - LDAP_DOMAIN=${LDAP_DOMAIN}
      - LDAP_SERVER=ldap://openldap:${LDAP_PORT_NUMBER}
      - LDAP_USER=cn=${LDAP_ADMIN_USERNAME},${LDAP_ROOT}
      - LDAP_USERS_DN=ou=people,${LDAP_ROOT}
      - LDAP_GROUPS_DN=ou=groups,${LDAP_ROOT}
    depends_on:
      - openldap
    networks:
      - phaidra-network

  openldap:
    image: bitnami/openldap:2.6.6-debian-11-r59
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    environment:
      - LDAP_ADMIN_USERNAME=${LDAP_ADMIN_USERNAME}
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}
      - LDAP_PORT_NUMBER=${LDAP_PORT_NUMBER}
      - LDAP_ROOT=${LDAP_ROOT}
      - LDAP_CUSTOM_LDIF_DIR=/ldifs
    volumes:
      - openldap:/bitnami/openldap
      - .././container_init/openldap:/ldifs:ro
    networks:
      - phaidra-network

  chronos:
    image: testuser34/chronos-base:73e15d1c
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    pull_policy: always
    volumes:
      - chronos-database-dumps:/mnt/database-dumps
      - chronos-sitemaps:/mnt/sitemaps
      - chronos-oai-logs:/mnt/oai-logs
      - .././container_init/chronos:/mnt/chronos:ro
    environment:
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - PHAIDRADB=${PHAIDRADB}
      - FEDORADB=${FEDORADB}
      - MONGODB_PHAIDRA_USER=${MONGODB_PHAIDRA_USER}
      - MONGODB_PHAIDRA_PASSWORD=${MONGODB_PHAIDRA_PASSWORD}
      - PHAIDRA_HOSTNAME=${PHAIDRA_HOSTNAME}
      - PHAIDRA_PORTSTUB=${PHAIDRA_PORTSTUB}
      - PHAIDRA_HOSTPORT=${PHAIDRA_HOSTPORT}
      - OUTSIDE_HTTP_SCHEME=${OUTSIDE_HTTP_SCHEME}
      - PHAIDRA_ADMIN_USER=${PHAIDRA_ADMIN_USER}
      - PHAIDRA_ADMIN_PASSWORD=${PHAIDRA_ADMIN_PASSWORD}
      - FEDORA_ADMIN_USER=${FEDORA_ADMIN_USER}
      - FEDORA_ADMIN_PASS=${FEDORA_ADMIN_PASS}
    depends_on:
      - mariadb-fedora
      - mariadb-phaidra
      - mongodb-phaidra
    entrypoint:
      - bash
      - /mnt/chronos/chronos-entrypoint.bash
    networks:
      - phaidra-network

  promtail-local:
    image: grafana/promtail:2.9.2
    volumes:
      - .././container_init/promtail/promtail-local-config.yaml:/etc/promtail/config.yaml:ro
      - ${HOST_DOCKER_SOCKET}:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yaml -config.expand-env=true
    networks:
      - phaidra-network
    depends_on:
      - grafana

  loki:
    image: grafana/loki:2.9.2
    volumes:
      - .././container_init/loki/loki-docker-config.yaml:/etc/loki/local-config.yaml:ro
      - loki:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - phaidra-network

  grafana:
    image: grafana/grafana:10.2.2
    volumes:
      - .././container_init/grafana/ds.yaml:/etc/grafana/provisioning/datasources/ds.yaml:ro
      - .././container_init/grafana/dd.yaml:/etc/grafana/provisioning/dashboards/dd.yaml:ro
      - ../container_init/grafana/dashboards:/mnt/grafana/dashboards:ro
      - grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/mnt/grafana/dashboards/phaidra_default.json
    depends_on:
      - loki
    networks:
      - phaidra-network

  prometheus:
    image: prom/prometheus:v2.48.0
    volumes:
      - ../container_init/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
      - prometheus:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - phaidra-network

  node-exporter:
    image: prom/node-exporter:v1.7.0
    networks:
      - phaidra-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    networks:
      - phaidra-network
    volumes:
      - /:/rootfs:ro
      - /sys:/sys:ro
      - ${HOST_DOCKER_SOCKET}:/var/run/docker.sock:ro

  # UNCOMMENT and fill .env values if you have access to an opencast instance
  # vige:
  #   image: testuser34/vige-base:f10c5205
  #   labels:
  #     logging: "promtail"
  #     logging_jobname: "containerlogs"
  #   pull_policy: always
  #   volumes:
  #     - .././src/vige:/mnt/vige:ro
  #     - vige:/opt/vige
  #     - fedora:/mnt/fedora:ro
  #     - vige-mongosh:/root/.mongodb
  #   networks:
  #     - phaidra-network
  #   depends_on:
  #     - mongodb-phaidra
  #   environment:
  #     OC_EVENTS_URL: ${OC_EVENTS_URL}
  #     OC_INGEST_URL: ${OC_INGEST_URL}
  #     OC_USER: ${OC_USER}
  #     OC_PASS: ${OC_PASS}
  #     OC_WORKFLOW: ${OC_WORKFLOW}
  #     M_USER: ${MONGODB_PHAIDRA_USER}
  #     M_PASS: ${MONGODB_PHAIDRA_PASSWORD}
  #     M_AGENT_DB: ${MONGO_AGENT_DB}
  #   command:
  #     - bash
  #     - /mnt/vige/vige_controller.bash

  # UNCOMMENT and fill .env values, if you have a remote Grafana instance with loki.
  # promtail-push:
  #   image: grafana/promtail:2.9.2
  #   volumes:
  #     - .././container_init/promtail/promtail-push-config.yaml:/etc/promtail/config.yaml:ro
  #     - ${HOST_DOCKER_SOCKET}:/var/run/docker.sock:ro
  #   command: -config.file=/etc/promtail/config.yaml -config.expand-env=true
  #   networks:
  #     - phaidra-network
  #   environment:
  #     - LOKI_PUSH_URL=${LOKI_PUSH_URL}
  #     - PROMTAIL_HOST_LABEL=${PROMTAIL_HOST_LABEL}

volumes:
  openldap:
  fedora:
  dbgate:
  mongodb_phaidra:
  mariadb_fedora:
  mariadb_phaidra:
  pixelgecko:
  solr:
  chronos-database-dumps:
  chronos-sitemaps:
  chronos-oai-logs:
  vige:
  vige-mongosh:
  loki:
  grafana:
  prometheus:
