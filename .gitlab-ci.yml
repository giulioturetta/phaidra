image: docker:24

variables:
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - test
  - release

services:
  - docker:24-dind

build-api:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker context create builder-context &&
    docker buildx create builder-context --name container --driver=docker-container &&
    docker buildx build -f dockerfiles/api.dockerfile
    --builder=container
    --platform=linux/amd64,linux/arm64
    -t $CI_REGISTRY_USER/api-base:latest
    -t $CI_REGISTRY_USER/api-base:$CI_COMMIT_SHORT_SHA --push . 
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
      changes:
        paths:
          - dockerfiles/api.dockerfile

build-chronos:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker context create builder-context &&
    docker buildx create builder-context --name container --driver=docker-container &&
    docker buildx build -f dockerfiles/chronos.dockerfile
    --builder=container
    --platform=linux/amd64,linux/arm64
    -t $CI_REGISTRY_USER/chronos-base:latest
    -t $CI_REGISTRY_USER/chronos-base:$CI_COMMIT_SHORT_SHA --push .
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
      changes:
        paths:
          - dockerfiles/chronos.dockerfile

build-httpd:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker context create builder-context &&
    docker buildx create builder-context --name container --driver=docker-container &&
    docker buildx build -f dockerfiles/httpd.dockerfile
    --builder=container
    --platform=linux/amd64,linux/arm64
    -t $CI_REGISTRY_USER/httpd-base:latest
    -t $CI_REGISTRY_USER/httpd-base:$CI_COMMIT_SHORT_SHA --push .
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
      changes:
        paths:
          - dockerfiles/httpd.dockerfile

build-httpd-shib:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker context create builder-context &&
    docker buildx create builder-context --name container --driver=docker-container &&
    docker buildx build -f dockerfiles/httpd-shib.dockerfile
    --builder=container
    --platform=linux/amd64,linux/arm64
    -t $CI_REGISTRY_USER/httpd-base-shib:latest
    -t $CI_REGISTRY_USER/httpd-base-shib:$CI_COMMIT_SHORT_SHA --push .
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
      changes:
        paths:
          - dockerfiles/httpd-shib.dockerfile

build-imageserver:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker context create builder-context &&
    docker buildx create builder-context --name container --driver=docker-container &&
    docker buildx build -f dockerfiles/imageserver.dockerfile
    --builder=container
    --platform=linux/amd64,linux/arm64
    -t $CI_REGISTRY_USER/imageserver-base:latest
    -t $CI_REGISTRY_USER/imageserver-base:$CI_COMMIT_SHORT_SHA --push .
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
      changes:
        paths:
          - dockerfiles/imageserver.dockerfile

build-pixelgecko:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker context create builder-context &&
    docker buildx create builder-context --name container --driver=docker-container &&
    docker buildx build -f dockerfiles/pixelgecko.dockerfile
    --builder=container
    --platform=linux/amd64,linux/arm64
    -t $CI_REGISTRY_USER/pixelgecko-base:latest
    -t $CI_REGISTRY_USER/pixelgecko-base:$CI_COMMIT_SHORT_SHA --push .
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
      changes:
        paths:
          - dockerfiles/pixelgecko.dockerfile

build-vige:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker context create builder-context &&
    docker buildx create builder-context --name container --driver=docker-container &&
    docker buildx build -f dockerfiles/vige.dockerfile
    --builder=container
    --platform=linux/amd64,linux/arm64
    -t $CI_REGISTRY_USER/vige-base:latest
    -t $CI_REGISTRY_USER/vige-base:$CI_COMMIT_SHORT_SHA --push .
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
      changes:
        paths:
          - dockerfiles/vige.dockerfile  
          
compose-demo:
  stage: test
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - cd compose_demo
    - cp ../.env.template .env
    - docker compose up -d --quiet-pull --build
    - docker compose down
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        paths:
          - compose_demo/docker-compose.yaml
          - components/phaidra-ui/**/*
          - container_components/solr/**/*

compose-ssl:
  stage: test
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - cd compose_ssl
    - cp ../.env.template .env
    - docker compose up -d --quiet-pull --build
    - docker compose down
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        paths:
          - compose_ssl/docker-compose.yaml
          - components/phaidra-ui/**/*
          - container_components/solr/**/*

compose-shib:
  stage: test
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - cd compose_shib
    - cp ../.env.template .env
    - docker compose up -d --quiet-pull --build
    - docker compose down
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        paths:
          - compose_shib/docker-compose.yaml
          - components/phaidra-ui/**/*
          - container_components/solr/**/*

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
  script:
    - echo "running release_job"
  release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'

build-website-nopush:
  stage: release
  script:
    - pwd
    - ls
