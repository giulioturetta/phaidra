image: docker:24

variables:
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - test
  - release

services:
  - docker:24-dind

build-api:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker build -f dockerfiles/api.dockerfile
    -t $CI_REGISTRY_USER/api-base:latest
    -t $CI_REGISTRY_USER/api-base:$CI_COMMIT_SHORT_SHA . &&
    docker push --all-tags $CI_REGISTRY_USER/api-base
  rules:
    - changes:
        paths:
          - dockerfiles/api.dockerfile
        compare_to: 'refs/heads/main'

build-chronos:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker build -f dockerfiles/chronos.dockerfile
    -t $CI_REGISTRY_USER/chronos-base:latest
    -t $CI_REGISTRY_USER/chronos-base:$CI_COMMIT_SHORT_SHA . &&
    docker push --all-tags $CI_REGISTRY_USER/chronos-base
  rules:
    - changes:
        paths:
          - dockerfiles/chronos.dockerfile
        compare_to: 'refs/heads/main'

build-httpd:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker build -f dockerfiles/httpd.dockerfile
    -t $CI_REGISTRY_USER/httpd-base:latest
    -t $CI_REGISTRY_USER/httpd-base:$CI_COMMIT_SHORT_SHA . &&
    docker push --all-tags $CI_REGISTRY_USER/httpd-base
  rules:
    - changes:
        paths:
          - dockerfiles/httpd.dockerfile
        compare_to: 'refs/heads/main'

build-imageserver:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker build -f dockerfiles/imageserver.dockerfile
    -t $CI_REGISTRY_USER/imageserver-base:latest
    -t $CI_REGISTRY_USER/imageserver-base:$CI_COMMIT_SHORT_SHA . &&
    docker push --all-tags $CI_REGISTRY_USER/imageserver-base
  rules:
    - changes:
        paths:
          - dockerfiles/imageserver.dockerfile
        compare_to: 'refs/heads/main'

build-pixelgecko:
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script: >
    docker build -f dockerfiles/pixelgecko.dockerfile
    -t $CI_REGISTRY_USER/pixelgecko-base:latest
    -t $CI_REGISTRY_USER/pixelgecko-base:$CI_COMMIT_SHORT_SHA . &&
    docker push --all-tags $CI_REGISTRY_USER/pixelgecko-base
  rules:
    - changes:
        paths:
          - dockerfiles/pixelgecko.dockerfile
        compare_to: 'refs/heads/main'

compose-demo:
  stage: test
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - cd compose_demo
    - docker compose up -d --quiet-pull --build
    - docker compose down
  rules:
    - changes:
        paths:
          - compose_demo/docker-compose.yaml
          - compose_demo/.env
          - components/phaidra-ui/**/*
          - image_components/solr/**/*

compose-ssl:
  stage: test
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - cd compose_ssl
    - docker compose up -d --quiet-pull --build
    - docker compose down
  rules:
    - changes:
        paths:
          - compose_ssl/docker-compose.yaml
          - compose_ssl/.env
          - components/phaidra-ui/**/*
          - image_components/solr/**/*

compose-shib:
  stage: test
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - cd compose_shib
    - docker compose up -d --quiet-pull --build
    - docker compose down
  rules:
    - changes:
        paths:
          - compose_shib/docker-compose.yaml
          - compose_shib/.env
          - components/phaidra-ui/**/*
          - image_components/solr/**/*

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
  script:
    - echo "running release_job"
  release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
