apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file ../../compose_cloudready/docker-compose.yaml convert
    kompose.version: 1.26.0 (40646f47)
    logging: promtail
    logging_jobname: containerlogs
  creationTimestamp: null
  labels:
    io.kompose.service: mariadb-phaidra
  name: mariadb-phaidra
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mariadb-phaidra
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file ../../compose_cloudready/docker-compose.yaml convert
        kompose.version: 1.26.0 (40646f47)
        logging: promtail
        logging_jobname: containerlogs
      creationTimestamp: null
      labels:
        io.kompose.network/phaidra-network: "true"
        io.kompose.service: mariadb-phaidra
    spec:
      containers:
        - env:
            - name: MARIADB_DATABASE
              value: "{{ .Values.PHAIDRADB }}"
            - name: MARIADB_PASSWORD
              value: "{{ .Values.MARIADB_PHAIDRA_PASSWORD }}"
            - name: MARIADB_ROOT_PASSWORD
              value: "{{ .Values.MARIADB_ROOT_PASSWORD }}"
            - name: MARIADB_USER
              value: "{{ .Values.MARIADB_PHAIDRA_USER }}"
          image: testuser34/mariadb-phaidra-dist:latest
          name: mariadb-phaidra
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mariadb-phaidra
          # run as nobody because of container's chown sequence.
          securityContext:
            runAsUser: 65534
      restartPolicy: Always
      volumes:
        - name: mariadb-phaidra
          persistentVolumeClaim:
            claimName: mariadb-phaidra
status: {}
